<!doctype html>

<script>
'use strict';
const citaten =
[
["1", "Midden in Europa woedt een oorlog. Daarmee verbonden waren voor mij veel bijzondere ervaringen en ontmoetingen met geweldige en interessante mensen. Daarvoor wil ik bedanken."],
["2", "Deze genocidist moedigt dit aan via sociale media vanuit Miami."],
["3", "Wat ik had aangezien voor geluk, was opluchting. Toen ik mijn Edisons won, huilde ik niet van blijdschap, maar omdat dit bevestigde dat een muziekcarri&egrave;re niet onmogelijk was."],
["4", "Het zit erop. Het is mooi geweest en nu is het klaar. Dit was het."],
["5", "De benen van Doutzen Kroes! Die zou ik wel voor &eacute;&eacute;n dag willen hebben. Dan zou ik in een heel kort rokje, met van die enorme stiletto-hakken, door Den Haag gaan rennen."],
["6", "Je kunt het alleen doen met een volle tank, plus een beetje energie in reserve voor de plotselinge uitdagingen."],
["7", "Ik las zelf als kind Sjors en Sjimmie. En dat bleef ik lezen in de hoop dat Sjimmie toch ook een keer leuk en slim zou worden."],
["8", "Ik heb altijd gehandeld in het belang van de stad."],
["9", "We zullen in geen geval grondtroepen sturen. Er zal geen directe betrokkenheid zijn. Daar kun je op rekenen."],
["10", "Een gedicht schrijven is mij geen doodsbedreigingen waard."],
["11", "Deze hoort zeker in de top drie van mooiste zeges ooit voor mij. Deze zal me nog lang heugen."],
["12", "Kunt u deze pati&euml;nt weghalen? Hij werkt niet echt mee."],
["13", "Mijn man Nol perste voor mij dan eerst een heerlijke sinaasappelsap, en daar deed ik een goede scheut wodka in. Vervolgens zetten wij de plaat op, en het was altijd een en al teleurstelling. Mijn man maakte wat grappen en de wodka hielp, zo moest ik het relativeren, maar makkelijk was dat niet."],
["14", "Geef ons vleugels."],
["15", "Vanaf morgen wordt het beter. We hebben nog wat problemen met brandstof, maar die zullen we ook oplossen."],
["16", "Ik neem veel levenslessen mee terug."],
["17", "Nee, ik ben niet aan het radicaliseren."],
["18", "Ik zeg weleens gekscherend: &lsquo;Eindelijk iets leuk Joods&rsquor;. Even geen Holocaustgeschiedenis, niet de lelijke kop van het antisemitisme, geen zooi in het Midden-Oosten."],
["19", "Ik wil over jou praten. Ik wil over jou leren. Ik wil alles met jou doen. Je bent getrouwd, maar je bent niet gelukkig. Je bent getrouwd, maar je bent niet bevredigd. Je bent getrouwd maar je bent niet verliefd."],
["20", "We staan voor de fundamentele vraag: gaan we de soevereiniteit van volkeren verdedigen, de vrijheid tegen agressie, verdedigen we onze democratie? Een jaar geleden kenden we het antwoord al: ja!"],
["21", "Ik heb meer volgers op Twitter dan de SGP-achterban groot is."],
["22", "Toen ik het liedje voor het eerst hoorde, dacht ik meteen: wow!"],
["23", "Nooit eerder is het gedaan. Dus ja, het is echt gek. Dat ik opgewonden ben, komt door de adrenaline."],
["24", "Ik besefte onvoldoende hoe intens gemeen Baudet is. Ik kan me niet voorstellen dat mensen zo zijn. Heel achterbaks. Ik ging voor het succes en hij ging voor zichzelf, dat is het verschil."],
["25", "Vergis je niet. Als je hier illegaal binnenkomt, zul je niet kunnen blijven."],
["26", "Toen ik op een paard zat, merkte ik meteen dat ik helemaal niet anders was dan anderen. Een paard vraagt nooit: &lsquo;Waarom loop jij zo raar?&rsquor;"],
["27", "Stel je voor dat je in dat sfeertje de leuke tv-analist moet zijn. Met de vieze praatjesmaker tegenover je aan tafel."],
["28", "Een &lsquo;Mmmm&rsquor;-geluid maken mag &eacute;&eacute;n keer per maaltijd en niet vaker."],
["29", "Je moet dingen in hun tijd plaatsen. In die periode werd alles nog in de doofpot gestopt."],
["30", "Mensen, what the fuck is er gebeurd?"],
["31", "Ik laat me na vier decennia niet zomaar bij het grofvuil zetten."],
["32", "Wij zijn hartstikke blij dat er na de overwinning van BBB ruimte komt voor een nieuwe aanpak van het stikstofprobleem."],
["33", "Ik schaam me diep. Ik heb het gevoel dat mijn lichaam niet meer van mij is. En ik walg nu van seks, voor het eerst in mijn leven."],
["34", "Rusland probeerde ons angst aan te jagen. Nou, we zijn niet bang."],
["35", "Ze gaan me arresteren. Ik kan niet geloven dat dit in Amerika gebeurt."],
["36", "Het dogma van groei, groei, groei dat Schiphol jarenlang huldigde, houdt geen stand meer."],
["37", "Je rijdt in een Porsche en hij heeft vermogen, dan wil je soms harder rijden."],
["38", "Sterker dan die ene roeping was er die roeping om vader te worden."],
["39", "En zuig aan mijn tong."],
["40", "Ik was vooraf zo bang voor deze afstand."],
["41", "Van Rutte had ik bijvoorbeeld soms wel tien uitspraken bijeengebracht. Wat die man toch allemaal uitkraamt."],
["42", "De administratie bij het ministerie van financi&euml;n troffen we aan in vuilniszakken. Geen computers, niks. Zo was het achtergelaten door de vorige minister van financi&euml;n."],
["43", "Ik word neergezet als een soort dolle stier die voortplantingsdrang zou hebben. Ik geloof in creatie."],
["44", "Sjojgoe, Gerasimov, waar blijft die klote-munitie!?"],
["45", "Met non-binair hebben we er een categorie bij, terwijl we wat mij betreft het sekse-onderscheid juist moeten opheffen. We moeten ons die vrouwelijke en mannelijke etiketten niet laten opdringen. Pas dan kunnen we toe naar gelijkheid tussen mannen en vrouwen."],
["46", "Ik zag al die pati&euml;nten ook liggen. Het raakte me. Ik heb naar ze gezwaaid."],
["47", "Ik luister altijd naar mijn dochters."],
["48", "Het waren de meest oneerlijke verkiezingen in jaren."],
["49", "Als kind heb ik in gedachten heel wat mensen omgelegd."],
["50", "Mark schiet eens op!"],
["51", "Het is zo gek als je nu door de zalen loopt en beseft dat dit nooit meer gaat gebeuren."],
["52", "Dit is z&oacute; racistisch! Doe even normaal man!"],
["53", "Ik hou het meest van gewoon een krantje maken."],
["54", "Afgelopen maanden is dat vertrouwen ondanks grote voorstellen die we gedaan hebben niet dichterbij gekomen."],
["55", "We moeten rekening houden met de wilskracht van deze mensen om te overleven. Daarom zetten we onze reddingsoperaties door."],
["56", "Iedere binnenlandse muiterij is een serieuze bedreiging tegen onze staat."],
["57", "Inmiddels weet zelfs de koning mijn naam goed te spellen. Dat is prima. Ik de zijne ook."],
["58", "Je kon je maar beter laten bekeren, dan werd je met rust gelaten. Ook door God trouwens, want God koos partij voor de witte westerling. Zwarte mensen behoorden niet tot zijn doelgroep."],
["59", "We draaien de kraan echt dicht: er wordt nul gewonnen."],
["60", "Voor mij ligt de democratie niet meer in de Tweede Kamer of in politiek Den Haag. Het is voor mij nu tijd om uit de Haagse bubbel te stappen en me op een andere manier bezig te houden met onze democratie."],
["61", "Maar voor het overduidelijke gebrek aan handelen tegen deze misdaad tegen de menselijkheid, vraag ik vandaag, op deze dag dat we samen het Nederlands slavernijverleden herdenken, vergiffenis."],
["62", "Liegen is een zwaar woord. Het zit in haar geheugen anders. En het zit in mijn geheugen anders."],
["63", "Ik moet me vasthouden aan de afgelopen zes maanden. Er zijn niet veel die twee ATP-titels in zes maanden winnen."],
["64", "Deze zomerstorm was een heel explosief, klein ding, dat zich pas in de loop van de nacht ontwikkelde."],
["65", "Het is oneindig veel fijner om door onbekenden aangevallen te worden op Twitter, dan om meegetrokken te worden in het nepgeluk op Instagram."],
["66", "De val van een kabinet is nooit in het landsbelang."],
["67", "Ik heb zo veel mensen de asieldeal beloofd."],
["68", "Er kan over veel worden gesproken, maar minderjarige kinderen moeten bij hun ouders blijven. Dat is een diepe overtuiging die ik niet ga opgeven."],
["69", "De partij gaat mij aan het hart en daar heb ik idee&euml;n bij. Ik heb daarom besloten om mij te kandideren voor het lijsttrekkerschap van de VVD."],
["70", "Tennis is gestoord."],
["71", "Ik ben weg, ik ben dood."],
["72", "Voorheen voorspelden computermodellen de naderende klimaateffecten, nu spreekt het klimaat zelf tot ons. Ik kan alle voorbeelden van extreem weer nauwelijks bijbenen."],
["73", "We zitten weer bij de top. Dat waren we niet, maar nu weer wel. Hier kunnen we mee door."],
["74", "Het is heel erg hoog, een helikopter kan er niet komen. Je kan daar niet met een zak aardappelen gaan zeulen."],
["75", "Mensen denken soms dat ik een machine ben en ik laat, denk ik, nu zien dat dat niet zo is. Maar dat had ik liever niet op de WK laten zien."],
["76", "Ik neem geen ontslag, ik neem geen ontslag. Ik neem geen ontslag."],
["77", "Als jullie zo doorgaan, dreigt dat enorme ego van mij stratosferische omvang te krijgen, dat is niet goed."],
["78", "Mijn witte vrienden staan z&oacute; anders in het leven; ze lijken niet te beseffen dat veel dingen voor mij minder vanzelfsprekend zijn."],
["79", "Kortste Haagse carri&egrave;re ooit, helaas. Hier had ik me zeer op verheugd."],
["80", "Ik denk wel dat de hel bestaat. Maar hoe die bevolkt is, weet ik niet."],
["81", "Het was in strijd met het gevoel wat hierover in het land leefde."],
["82", "Op dit moment moeten we geen ongeplande, drastische, avontuurlijke actie ondernemen."],
["83", "Wij zijn de mooiste partij van de wereld en we houden elkaar vast. We komen hier sterker uit."],
["84", "Mark, wat hebben wij, wat heeft Nederland toch ontzettend veel aan je te danken."],
["85", "We zijn in oorlog."],
["86", "Wij maken even pas op de plaats."],
["87", "Het was een manier om tegen de wereld te zeggen: Fuck you. Jullie willen dat ik me mooi maak voor jullie? Fuck you. Jullie willen dat ik me goed gedraag voor jullie? Fuck you. Jullie willen dat ik jullie droomvrouw ben? Fuck you."],
["88", "Ik begrijp dat u denkt: wie is die lange man met die moeilijke naam uit Nederland, en wat gaat hij doen op het gebied van klimaatverandering?"],
["89", "De top vier is te ver weg. We zijn ambitieus, maar ook realistisch."],
["90", "Het boek van het premierschap is voor mij waarschijnlijk dicht."],
["91", "Ik ben een monnik in de muziek."],
["92", "Ze mogen mij de Trouw weleens een keer gratis geven! Ik heb jaren betaald voor de krant waarvoor ik potverdorie mijn leven gewaagd heb!"],
["93", "Als planten en dieren in je cirkel van vrienden mogen vallen, krijg je een breder perspectief en kun je ook de mensen anders gaan zien."],
["94", "Jullie hebben mij vast al eerder zien spreken en kennen mijn boodschap. Die blijf ik nog jaren herhalen."],
["95", "Ja, het heet dan wel een morele verplichting om optimistisch te zijn, maar ik zie er niets in. Positief blijven &ndash; ook al zo&rsquor;n leus die me de strot uitkomt."],
["96", "De kiezer heeft gezegd: we zijn het zat, we zijn het spuugzat."],
["97", "Veel politici moeten over hun schaduw heen stappen."],
["98", "Het wordt voor iedereen weer wennen om uit de campagnestand te komen. Dat vraagt echt iets van partijen."],
["99", "Een kalkoen loopt ook niet naar het kerstmaal."],
["100", "Stoppen met olie en gas brengt de mensheid terug naar grotten"]
];
const namen =
[
["d", "Onno Aerden, beoogd woordvoerder NSC"],
["d", "Akwasi, schrijver, scenarist en dichter"],
["k", "Prinses Amalia"],
["f", "Elly Ameling, sopraan"],
["g", "Jacinda Ardern, premier Nieuw-Zeeland"],
["d", "Tinneke Beeckman, filosofe"],
["c", "Joe Biden, president VS"],
["a", "Mirjam Bikker, leider ChristenUnie"],
["e", "Marion Bloem, schrijfster"],
["l", "Marie Blommaart, verzetsstrijder"],
["a", "Femke Bol, atlete"],
["a", "Ren&eacute; de Bos, bergbeklimmer"],
["a", "Andr&eacute; Bosman, oud-Kamerlid en oud-F-16-piloot"],
["h", "Eric van der Burg, staatssecretaris"],
["k", "Dalai lama Tenzin Gyatso"],
["n", "Joy Delima, actrice en columnist"],
["e", "Taco Dibbits, directeur Rijksmuseum"],
["e", "Tom Egbers, sportpresentator"],
["&ijlig;", "Recep Tayyip Erdogan, president Turkije"],
["e", "B&eacute;n&eacute;dicte Ficq, advocaat"],
["n", "Paus Franciscus"],
["n", "Tallon Griekspoor, tennisser"],
["e", "Sifan Hassan, atlete"],
["d", "Sophie Hermans, VVD-fractievoorzitter"],
["o", "Haro Hielkema, Citatenpuzzel-maker"],
["k", "Wopke Hoekstra, Eurocommissaris voor klimaat"],
["c", "Michel Houellebecq, schrijver"],
["e", "Bart van den Hurk, klimaatwetenschapper en covoorzitter VN-klimaatpanel IPCC"],
["a", "Arnold Huijgen, theoloog"],
["r", "Roxane van Iperen, schrijfster"],
["d", "Sultan al-Jaber, Cop28-voorzitter"],
["o", "Annemarie Jorritsma, voormalig verkenner"],
["t", "Sigrid Kaag, D66-leider"],
["a", "Henk Kamp, oud-minister"],
["a", "Mona Keijzer, premierskandidaat BBB"],
["e", "Kemal Kili&ccedil;daroglu, presidentskandidaat Turkije"],
["l", "Enzo Knol, vlogger"],
["i", "Christine Lambrecht, minister van defensie Duitsland"],
["l", "Pim Lammers, auteur"],
["i", "Renske Leijten, Kamerlid"],
["e", "Irene van Lippe-Biesterfeld, prinses"],
["k", "Luiz In&aacute;cio Lula da Silva, president Brazili&euml;"],
["l", "Jonathan M., spermadonor"],
["t", "Cornald Maas, Songfestivalkenner"],
["e", "John Mauger, kustwachtcommandant"],
["e", "Koningin M&aacute;xima"],
["h", "Marjan Minnesma, klimaatstrijder van Urgenda"],
["b", "Naaz Mohammad, zangeres"],
["e", "Richard de Mos, politicus en leider Hart voor Den Haag"],
["e", "Elon Musk, ondernemer"],
["e", "Benjamin Netanyahu, premier Isra&euml;l"],
["h", "Sauli Niinist&ouml;, president Finland"],
["d", "Pieter Omtzigt, leider NSC"],
["&ijlig;", "Trijntje Oosterhuis, zangeres"],
["r", "Eloise van Oranje, gravin en vlogger"],
["r", "Henk Otten, senator en ex-PVV"],
["o", "Esther Ouwehand, lijsttrekker Partij voor de Dieren"],
["r", "Nikol Pasjinjan, premier Armeni&euml;"],
["d", "Caroline van der Plas, leider BBB"],
["i", "Mathieu van der Poel, wielrenner"],
["f", "Vladimir Poetin, president Rusland"],
["d", "Tadej Pogacar, wielrenner"],
["i", "Jevgeni Prigozjin, Wagnerbaas"],
["e", "Roline Redmond, schrijfster"],
["e", "Beatrijs Ritsema, etiquette-specialist"],
["t", "Luis Rubiales, voorzitter van de Spaanse voetbalbond"],
["r", "Mark Rutte, minister-president"],
["p", "Chandrikapersad Santokhi, president Suriname"],
["a", "John van &rsquor;t Schip, Ajax-trainer"],
["n", "Olaf Scholz, bondskanselier Duitsland"],
["e", "Gert-Jan Segers, leider van de ChristenUnie"],
["d", "Rob Sluijter, KNMI-medewerker"],
["a", "Jan Smit, zanger en voorzitter van FC Volendam"],
["e", "Ruud Sondag, Schiphol-interim-topman"],
["n", "Britney Spears, superster"],
["h", "Sherida Spitse, voetbalster"],
["e", "Jordan Stolz, schaatser"],
["a", "Gom van Strien, kortstondig verkenner"],
["i", "Rishi Sunak, premier Verenigd Koninkrijk"],
["i", "Sydney, chatbot van zoekmachine Bing van Microsoft"],
["i", "Sjaak van der Tak, LTO-voorzitter"],
["n", "Greta Thunberg, klimaatactivist"],
["e", "Frans Timmermans, lijsttrekker GL-PvdA"],
["h", "Lee Towers, zanger"],
["i", "Donald Trump, ex-president VS"],
["z", "Hans Vijlbrief, staatssecretaris"],
["k", "Sanne Voets, dressuuramazone"],
["s", "Johan Vollenbroek, stikstofactivist"],
["r", "Mark&eacute;ta Vondrousov&aacute;, tennisster"],
["l", "Jacques van der Voort, vormgever Trouw"],
["b", "Marijn de Vries, wielrencommentator en oud-wielrenster"],
["n", "Lucille Werner, Kamerlid en voormalig presentator"],
["e", "Geert Wilders, leider PVV"],
["e", "Koning Willem-Alexander"],
["e", "Lucas Winnips, Extinction Rebellion"],
["c", "Jolande Withuis, sociologe"],
["p", "Dilan Yesilg&ouml;z, leider VVD"],
["l", "Volodymyr Zelensky, president Oekra&iuml;ne"],
["k", "Jaap van Zweden, dirigent"],
["d", "Irene Zwiep, hoogleraar"]
];
</script>

<html lang="nl">
<head>
<meta http-equiv="expires" content="now"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="version" content="41"/>
<title>trouwCitatenPuzzel</title>
<style>

*
{
   box-sizing:  border-box;                      /* */
   user-select: none;                            /* */
}

.draggable
{
   cursor: grab;                                 /* */
}

.clickable
{
   cursor: pointer;                              /* */
}

#oplossing
{
   display:               inline-grid;           /* voor mooie vierkantjes */
   grid-template-columns: repeat(50, 1fr);       /* */

   padding:               1.0rem;                /* */
   background:            hsl( 45, 50%, 90%);    /* */
}

#oplossing > .cijfer
{
   text-align: center;                           /* */
}

#oplossing > .letter
{
   width:         1.6rem;                        /* */
   height:        1.6rem;                        /* */

   border-style:  solid;                         /* */
   border-width:  1px;                           /* */
   border-color:  hsl(0, 0%, 0%);                /* */

   font-variant: small-caps;                     /* */
   text-align: center;                           /* */
}

#oplossing > .letter:not(:nth-child(50n+1))
{
   border-left:   none;                          /* */
}

#keuzes
{
   display:          inline-grid;                /* */
/* display:                 grid;                /* */
   grid-template-columns: repeat(4, minmax(1rem, auto));       /* */

/* max-height: 70vh; /* */
       height: 70vh; /* */
   overflow: auto;                               /* */

   gap:                   .5rem;                 /* */
   padding:               1.0rem;                /* */
   background: hsl(345, 50%, 90%);               /* */
}

#keuzes > div:nth-child(4n+3)
{
   text-align: right;                            /* */
}

#numeriek, #alfabetisch
{
   padding: .3rem; /* */
}



/* begin copyright style */
.jcr-copy
{
   border-top:  hsl(000, 000%, 020%) thin solid; /* */
   color:       hsl(000, 000%, 020%);            /* */
   font-size:   0.9rem;                          /* */
   text-align:  right;                           /* */
   margin:      1rem 0.5rem;                     /* */
   padding:     0.5rem;                          /* */
   user-select: none;                            /* */
}
.jcr-copy::before { content: '\00a9 '; }          /* */
.jcr-copy::after  { content: ' jcr'; }            /* */
/* end copyright style */
</style>
<script>
'use strict';
document.addEventListener('DOMContentLoaded', e => js_object_trouwCitatenPuzzel.onload(e), false);

const js_object_trouwCitatenPuzzel = (() =>
{
   const onload = e =>
   {
      try
      {
         let year = new Date(document.lastModified).getFullYear();
         document.querySelectorAll('.jcr-copy').forEach(y => y.innerHTML = year);
         init();
      }  catch(err) { console.error('oops', err) }
   }

   const realName = Array.from(namen.keys());        // van gesorteerde index naar echte: namen[realName[99]][0] == 'z'

   const fixed = new Array(namen.length).fill(false);  // fixed[citaat] == true ? person voor citaat ligt vast

   const personByQuote = Array(namen.length);
   const quoteByPerson = Array(namen.length);
   const defaultOrder  = Array.from(namen.keys());

   const rowOfBox      = Array.from(namen.keys());

   let quoteByRow  = defaultOrder;                   // bij alfabetische volgorde wordt het
   let personByRow = personByQuote;                  // quoteByRow = quoteByPerson en personByRow = default

   const boxById          = Array(namen.length);
   const quoteNumberById  = Array(namen.length);
   const quoteTextById    = Array(namen.length);
   const personLetterById = Array(namen.length);
   const personTextById   = Array(namen.length);


   const init = () =>
   {
      sortLetters();

      readCookie();

      docElements();

      fillBoxes();

      numeriek.onclick    = numericOrder;
      alfabetisch.onclick = alphabeticOrder;

      numericOrder();
   }


   const drop = e =>
   {
      let isBox = e.dataTransfer.getData(e.dataTransfer.types[0]).charAt(0) == 'B';


      let from = parseInt(e.dataTransfer.getData(e.dataTransfer.types[0]).substr(1));
      let to   = parseInt(e.target.id.substr(1));

      if (isBox)
      {
         from = rowOfBox[from];
         to   = rowOfBox[to];
      }

      let quoteFrom = quoteByRow[from];
      let quoteTo   = quoteByRow[to];
      let personFrom = personByRow[from];
      let personTo   = personByRow[to];

      [boxById[quoteByRow[from]].innerHTML, boxById[quoteByRow[to]].innerHTML] = [boxById[quoteByRow[to]].innerHTML, boxById[quoteByRow[from]].innerHTML];

      if (quoteByRow == defaultOrder)
      {
         [personLetterById[from].innerHTML, personLetterById[to].innerHTML] = [personLetterById[to].innerHTML, personLetterById[from].innerHTML];
         [personTextById[from].innerHTML,   personTextById[to].innerHTML]   = [personTextById[to].innerHTML,   personTextById[from].innerHTML];
      }
      else
      {
         [quoteNumberById[from].innerHTML, quoteNumberById[to].innerHTML] = [quoteNumberById[to].innerHTML, quoteNumberById[from].innerHTML];
         [quoteTextById[from].innerHTML,   quoteTextById[to].innerHTML]   = [quoteTextById[to].innerHTML,   quoteTextById[from].innerHTML];

         [rowOfBox[from], rowOfBox[to]] = [rowOfBox[to], rowOfBox[from]];
      }

      [quoteByPerson[personFrom], quoteByPerson[personTo]] = [quoteByPerson[personTo], quoteByPerson[personFrom]];
      [personByQuote[quoteFrom], personByQuote[quoteTo]]   = [personByQuote[quoteTo], personByQuote[quoteFrom]];

      writeCookie();
   }

   const toggleFixed = e =>
   {
      let row    = parseInt(e.target.id.substr(1));
      let quote  = quoteByRow[row];


      fixed[quote] = !fixed[quote];

      if (fixed[quote])
      {
         unsetDragDrop(personTextById[row]);
         unsetDragDrop(quoteTextById[row]);
         unsetDragDrop(boxById[quote]);
         e.target.innerHTML = e.target.innerHTML.toUpperCase();
         boxById[quote].innerHTML = boxById[quote].innerHTML.toUpperCase();
      }
      else
      {
         setDrop(personTextById[row]);
         setDrop(quoteTextById[row]);
         if (quoteByRow == defaultOrder)
         {
            setDrag(personTextById[row]);
         }
         else
         {
            setDrag(quoteTextById[row]);
         }

         setDragDrop(boxById[quote]);
         e.target.innerHTML = e.target.innerHTML.toLowerCase();
         boxById[quote].innerHTML= boxById[quote].innerHTML.toLowerCase();
      }

      writeCookie();
   }


   const sortLetters = () =>
   {
      // convert html entities (for sorting)
      let convertEntities = document.createElement('div');
      namen.forEach(v =>
      {
         convertEntities.innerHTML = v[0];
         v[0] = convertEntities.innerHTML;
//         convertEntities.innerHTML = v[1]; v[1] = convertEntities.innerHTML;
      });

      realName.sort((a, b) => namen[a][0].localeCompare(namen[b][0]) || a - b);

      realName.forEach((v, i) =>
      {
         quoteByPerson[i] = v;
         personByQuote[v] = i;
      });
   }

   const docElements = () =>
   {
      let cols = 50;
      let rows = parseInt((citaten.length+cols-1)/cols);

      for (let r = 0; r < rows; r++)
      {
         for (let c = 0 ; c < cols; c++)
         {
            let i = r*cols+c;

            let box          = document.createElement('div');
            let quoteNumber  = document.createElement('div');
            let quoteText    = document.createElement('div');
            let personLetter = document.createElement('div');
            let personText   = document.createElement('div');

            box.id          = 'B' + i;
            quoteNumber.id  = 'N' + i;
            quoteText.id    = 'Q' + i;
            personLetter.id = 'L' + i;
            personText.id   = 'P' + i;

            box.classList.add('letter');
            personLetter.classList.add('clickable');

            personLetter.onclick = toggleFixed;

            box.ondragstart        = dragStart;
            quoteText.ondragstart  = dragStart;
            personText.ondragstart = dragStart;

            boxById[i]          = box;
            quoteNumberById[i]  = quoteNumber;
            quoteTextById[i]    = quoteText;
            personLetterById[i] = personLetter;
            personTextById[i]   = personText;

            oplossing.appendChild(box);
            keuzes.appendChild(quoteNumber);
            keuzes.appendChild(quoteText);
            keuzes.appendChild(personLetter);
            keuzes.appendChild(personText);
         }

         for (let c = 0 ; c < cols; c++)
         {
            let div = document.createElement('div');
            div.className = 'cijfer';

            if (c%5 == 4) { div.innerHTML = r*cols+c+1 }

            oplossing.appendChild(div);
         }
      }
   }

   const fillBoxes = () =>
   {
      defaultOrder.forEach(v =>                   // note: v == index in defaultOrder
      {
         let i = quoteByRow[v];

         let box = boxById[i];
         let value = namen[realName[personByRow[v]]][0];

         if (fixed[i])
         {
            box.innerHTML = value.toUpperCase();
         }
         else
         {
            box.innerHTML = value.toLowerCase();
            setDragDrop(box);
         }
      });
   }

   const numericOrder = () =>
   {
      quoteByRow  = defaultOrder;
      personByRow = personByQuote;

      fillRows();
   }

   const alphabeticOrder = () =>
   {
      quoteByRow  = quoteByPerson;
      personByRow = defaultOrder;

      quoteByRow.forEach((v, i) => { rowOfBox[v] = i });

      fillRows();
   }

   const fillRows = () =>
   {
      defaultOrder.forEach(v =>
      {
         quoteNumberById[v].innerHTML  = citaten[quoteByRow[v]][0];
         quoteTextById[v].innerHTML    = citaten[quoteByRow[v]][1];
         personLetterById[v].innerHTML = namen[realName[personByRow[v]]][0];
         personTextById[v].innerHTML   = namen[realName[personByRow[v]]][1];

         if (quoteByRow == defaultOrder)
         {
            if (fixed[v])
            {
               personLetterById[v].innerHTML = personLetterById[v].innerHTML.toUpperCase();
               unsetDragDrop(quoteTextById[v]);
               unsetDragDrop(personTextById[v]);
            }
            else
            {
               personLetterById[v].innerHTML = personLetterById[v].innerHTML.toLowerCase();
               unsetDrag(quoteTextById[v]);
               setDrop(quoteTextById[v]);
               setDragDrop(personTextById[v]);
            }

         }
         else
         {
            if (fixed[quoteByRow[v]])
            {
               personLetterById[v].innerHTML = personLetterById[v].innerHTML.toUpperCase();
               unsetDragDrop(quoteTextById[v]);
               unsetDragDrop(personTextById[v]);
            }
            else
            {
               personLetterById[v].innerHTML = personLetterById[v].innerHTML.toLowerCase();
               setDragDrop(quoteTextById[v]);
               unsetDrag(personTextById[v]);
               setDrop(personTextById[v]);
            }
         }
      });
   }

   const readCookie = () =>
   {
      // lookup tabellen quote naar person en andersom

      realName.forEach((v, i) =>
      {
         quoteByPerson[i] = v;
         personByQuote[v] = i;
      });

      let personByName = personByQuote;  // de lookup van person in namen[] en citaten[] zijn initieel gelijk


      // de eventuele cookie heeft volgorde van quote en verwijzing naar namen[] (dus niet naar person)

      // searchstring override

      let result = [...(new URLSearchParams(window.location.search).get("citaten") ?? '').matchAll(/([UL])(\d+)/g)];


      if (result.length != citaten.length)
      {
         result = [...document.cookie.split(';').reduce((a,c) => (c.match(/\s*citaten=/))
                                                               ? c.split('=')[1]
                                                               : a, '').matchAll(/([UL])(\d+)/g)];
      }

      if (result.length == citaten.length)
      {
         result.forEach((v, i) =>
         {
            quoteByPerson[personByName[parseInt(v[2])]] = i;  // v[2] -> person heeft quote i

            fixed[i] = v[1] == 'U';
         });

         quoteByPerson.forEach((v, i) => { personByQuote[v] = i });  // nieuwe "reverse lookup" adhv cookie
      }
   }

   const writeCookie = () =>
   {
      let s = fixed.reduce((a, v, i) => a + (v ? 'U' : 'L') + realName[personByQuote[i]], '');

      document.cookie = `citaten=${s};expires=${new Date(Date.now()+1000*60*60*24*7*4).toUTCString()}`;
//      console.log('writeCookie():', s);
   }

   const setDragDrop = element =>
   {
      setDrag(element);
      setDrop(element);
   }

   const setDrag = element =>
   {
      element.draggable  = 'yep';
      element.classList.add('draggable');
   }

   const setDrop = element =>
   {
      element.ondragover = dragover;
      element.ondrop     = drop;
   }

   const unsetDragDrop = element =>
   {
      unsetDrag(element);
      unsetDrop(element);
   }

   const unsetDrag = element =>
   {
      element.draggable  = '';
      element.classList.remove('draggable');
   }

   const unsetDrop = element =>
   {
      element.ondragover = null;
      element.ondrop     = null;
   }

   const dragStart = e =>
   {
      e.dataTransfer.setData(e.target.id, e.target.id);
   }

   const dragover = e =>
   {
      let src = e.dataTransfer.types[0].charAt(0).toUpperCase();  // types[0] is het element id, maar in lowercase !?
      let tgt = e.target.id.charAt(0).toUpperCase();

//      if (src != tgt && !(src == 'Q' && tgt == 'P') && !(src == 'P' && tgt == 'Q')) { return }

      if ((src == 'B' && tgt != 'B') || (src != 'B' && tgt == 'B')) { return }

      e.preventDefault();
      e.dataTransfer.dropEffect = 'move';
   }

   return { onload: onload };
})();
</script>
</head>
<body>

<div id="oplossing"></div>
<br/>
<br/>
<br/>
<div id="keuzes">
<div></div> <button id="numeriek">sorteer op nummer</button>
<div></div> <button id="alfabetisch">sorteer op letter</botton>
</div>

<div class="jcr-copy"></div>
</body>
</html>
