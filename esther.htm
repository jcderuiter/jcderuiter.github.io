<!doctype html>
<html lang="nl">
<head>
<meta http-equiv="expires" content="now"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="version" content="0.0.0"/>
<title>rollenspel</title>
<style>
*
{
   box-sizing: border-box;                       /* */
}

body
{
   font-family: sans-serif;                      /* */
   line-height: 1.6;                             /* */
}

code
{
   font-size: larger;                            /* */
}

a
{
   text-decoration: none;                        /* */
   transition:      .5s;                         /* */
}
a, a:visited
{
   color: inherit;                               /* */
}
a:hover
{
   color: hsl(315, 100%,  50%);                  /* */
}

.center { text-align: center; }                  /* */
.nowrap { white-space: nowrap; }                 /* */


.parameters
{
   display: flex;                                /* */
   flex-flow: column;                            /* */
   user-select: none;                            /* */
   line-height: 2rem;                            /* */
}

/*.parameters > input /* */
.parameters input
{
   text-align: right;                            /* */
   margin: .2rem;                                /* */
}

.cols2
{
   display:               inline-grid;           /* */
   grid-template-columns: auto auto;             /* */
   justify-content: flex-start;                  /* */
}

.cols3
{
   display:               inline-grid;           /* */
   grid-template-columns: repeat(3, auto);       /* */
/* justify-content: space-between;               /* */
   justify-content: flex-start;                  /* */
}

.cols5
{
   display:               inline-grid;           /* */
   grid-template-columns: repeat(5, auto);       /* */
/* justify-content: space-between;               /* */
   justify-content: flex-start;                  /* */
}


.resultarea
{
   display: flex;                                /* */
   flex-flow: column;                            /* */

   background-color: hsl(195,   0%, 80%);        /* */
/* padding-left: .5rem;                          /* */
   border-radius: 5px;                           /* */
}

.resultarea > div:nth-child(even)
{
   background-color: hsl(180,   0%, 90%);        /* */
}

.resultarea > div:last-child
{
   background-color: hsl(120,   0%, 20%);        /* */
              color: hsl(120, 100%, 50%);        /* */
   padding-left: .5rem;                          /* */
}

.weekarea
{
   display: flex;                                /* */
   flex-wrap: wrap;                              /* */

/* background-color: hsl(300, 100%, 50%);        /* */
/* line-height: 2rem;                            /* */
}

.weekarea > div:first-child
{
   padding-left: .5rem; /* */
}

button,
label
{
   cursor: pointer; /* */
}


.red,
.orange,
.yellow,
.green,
.blue,
.purple,
.susceptible,
.immune
{
   border:        black solid 1px;               /* */
   border-radius: 1.8rem;                        /* */
   width:         1.8rem;                        /* */
   height:        1.8rem;                        /* */
   margin:        0.2rem .5rem;                  /* */

   text-align:    center;                        /* */
   font-size:     smaller;                       /* */
   line-height:   1.8rem;                        /* */
}

.susceptible
{
   background-color: hsl( 60, 100%,  50%);       /* */
}

.immune
{
   background-color: hsl(300, 100%, 100%);       /* */
}

.red
{
   background-color: hsl(330, 100%,  50%);       /* */
}
.orange
{
   background-color: hsl( 30, 100%,  50%);       /* */
}
.yellow
{
   background-color: hsl( 60, 100%,  50%);       /* */
}
.green
{
   background-color: hsl(135, 100%,  50%);       /* */
}
.blue
{
   background-color: hsl(210, 100%,  50%);       /* */
}
.purple
{
   background-color: hsl(285, 100%,  50%);       /* */
}


.red.text,
.orange.text,
.yellow.text,
.green.text,
.blue.text,
.purple.text,
.susceptible.text,
.immune.text
{
   display:       inline-block;                  /* */
   margin:        auto;                          /* */
   width:         1.0rem;                        /* */
   height:        1.0rem;                        /* */

   border-radius: 1.0rem;                        /* */
}

.rows2
{
   display:            grid;                     /* */
   grid-auto-flow:     column;                   /* */
   grid-template-rows: auto auto;                /* */
}

.rows3
{
   display:            grid;                     /* */
   grid-auto-flow:     column;                   /* */
   grid-template-rows: auto auto auto;           /* */
}

.rows2 > *,
.rows3 > *
{
   text-align:       right;                      /* */
   padding-right:    .5rem;                      /* */
   background-color: hsl( 45, 100%,  80%);       /* */
}

.rows2 > *:nth-child(even),
.rows3 > *:nth-child(3n+2)
{
   background-color: hsl( 60, 100%,  80%);       /* */
}

.disclaimer
{
   margin:     2rem;                             /* */
   padding:    1rem;                             /* */
   border:     1px solid hsl(0, 100%, 50%);      /* */
   font-size:  smaller;                          /* */
   font-style: italic;                           /* */
}

#geogebra
{
   width:  100%;                                 /* */
// height: 480px;                                /* */
   height: 27vw;                                 /* */
   border: 0;                                    /* */
}


/* begin page grid style */
.jcr-layout-header { grid-area: jcr-layout-header; }
.jcr-layout-left   { grid-area: jcr-layout-left;   }
.jcr-layout-main   { grid-area: jcr-layout-main;   }
.jcr-layout-right  { grid-area: jcr-layout-right;  }
.jcr-layout-footer { grid-area: jcr-layout-footer; }

.jcr-layout-left2  { grid-area: jcr-layout-left2;   }
.jcr-layout-main2  { grid-area: jcr-layout-main2;   }
.jcr-layout-right0 { grid-area: jcr-layout-right0;  }
.jcr-layout-footer0 { grid-area: jcr-layout-footer0; }

.jcr-layout
{
   display:             grid;                    /* */
   grid-template-areas:                          /* */
                        'jcr-layout-header'      /* */
                        'jcr-layout-left'        /* */
                        'jcr-layout-main'        /* */
                        'jcr-layout-right0'      /* */
                        'jcr-layout-footer0'     /* */
                        'jcr-layout-left2'       /* */
                        'jcr-layout-main2'       /* */
                        'jcr-layout-right'       /* */
                        'jcr-layout-footer';     /* */
}

.jcr-layout-header:not(:empty)
{
   margin-bottom: 1rem;                          /* */
}

.jcr-layout-footer0,
.jcr-layout-footer
{
   margin: .5rem .1rem;                          /* */
}

@media (orientation: landscape)
{
   .jcr-layout
   {
      grid-template-areas:                                                           /* */
                           'jcr-layout-header jcr-layout-header  jcr-layout-header'  /* */
                           'jcr-layout-left   jcr-layout-main    jcr-layout-right0'   /* */
                           'jcr-layout-footer0 jcr-layout-footer0  jcr-layout-footer0'  /* */
                           'jcr-layout-left2   jcr-layout-main2    jcr-layout-right'   /* */
                           'jcr-layout-footer jcr-layout-footer  jcr-layout-footer'; /* */
   }

   .jcr-layout.jcr-layout-cols
   {
      grid-template-areas:                                                           /* */
                           'jcr-layout-left   jcr-layout-header  jcr-layout-right0'   /* */
                           'jcr-layout-left   jcr-layout-main    jcr-layout-right0'   /* */
                           'jcr-layout-left   jcr-layout-footer0  jcr-layout-right0'   /* */
                           'jcr-layout-left2   jcr-layout-main2    jcr-layout-right'   /* */
                           'jcr-layout-left2   jcr-layout-footer  jcr-layout-right';  /* */
      justify-content:     space-between;        /* */
   }

   .jcr-layout-main2,
   .jcr-layout-main
   {
      width:         62vw;                       /* 2/(1+sqrt(5)) */
/*    min-height:    90vh;                       /* */
      justify-self:  center;                     /* */

      box-shadow:    0 0 .5rem;                  /* */
      border-radius: 5px;                        /* */
      padding:       1rem;                       /* */
   }

   .jcr-layout-main2.jcr-layout-A4,
   .jcr-layout-main.jcr-layout-A4
   {
      width: 70vh;                               /* */
   }

   .jcr-layout-main2.jcr-layout-solidborder,
   .jcr-layout-main.jcr-layout-solidborder
   {
      box-shadow: none;                          /* */
      border:     hsl(  0,   0%,  20%) thin solid; /* */
   }

   .jcr-layout-left2, .jcr-layout-right0,
   .jcr-layout-left, .jcr-layout-right
   {
      min-width: 15vw;                           /* */
   }
}
/*   end page grid style */

/* begin info style */
/* usage:                                                                   */
/* <label for="id" class="jcr-info">optional text</label>                   */
/*    other content                                                         */
/*    other content                                                         */
/* <input id="id" class="jcr-info" type="checkbox"/><div class="jcr-info">  */
/*    other content                                                         */
/* <label for="id" class="jcr-info">optional text</label>                   */
/*    other content                                                         */
/* </div>                                                                   */
/* the <div> must be the immediate successor of the <input>                 */
/* the first <label> gets a small '*'                                       */
/* the second <label> puts a 'close cross' in the right top of the <div>    */
/* both labels trigger an invisible checkbox on which CSS toggles the <div> */

label.jcr-info
{
   cursor: pointer;                              /* */
}

label.jcr-info::after
{
/* content:        '\01f6c8';                    /* */
/* content:        '\2139';                      /* */
   content:        '*';                          /* */
   font-weight:    bolder;                       /* */
   color:          hsl(240, 100%, 050%);         /* */
   vertical-align: super;                        /* */
   font-size:      smaller;                      /* */
}

input[type="checkbox"].jcr-info
{
   width:  0;                                    /* */
   height: 0;                                    /* */
}

input[type="checkbox"].jcr-info + div.jcr-info
{
   height:           0;                          /* */
   overflow:         hidden;                     /* */
   padding:          0;                          /* */

   position:         relative;                   /* */

   background-color: hsl( 60, 100%,  90%);       /* */
   box-shadow:       0 0 .5rem;                  /* */
   border-radius:    5px;                        /* */

   transform:        scale(0.0);                 /* */
   opacity:          0.0;                        /* */
   transition:       all .5s ease-in-out;        /* */
}

input[type="checkbox"].jcr-info:checked + div.jcr-info
{
   height:     auto;                             /* */
   margin:     .5rem 1rem;                       /* */
   padding:    1rem;                             /* */

   transform:  scale(1.0);                       /* */
   opacity:    1.0;                              /* */
   transition: all 2s ease-in-out;               /* */
}

div.jcr-info label.jcr-info::after
{
   content:  '\02612';                           /* */
   position: absolute;                           /* */
   top:      0;                                  /* */
   right:    .5rem;                              /* */
}
/*   end info style */

/* begin sections style */
@media screen and (orientation: portrait)
{
   #jcr_sections:not(:empty)::before
   {
      content: 'Jump to:';                       /* */
   }
   #jcr_sections:not(:empty):lang(nl)::before
   {
      content: 'Meteen naar:';                   /* */
   }
}
@media print
{
   #jcr_sections
   {
      display: none;                             /* */
   }
}

#jcr_sections a,
.jcr-section a
{
   text-decoration: none;                        /* */
   transition:      .5s;                         /* */
}
#jcr_sections a,
#jcr_sections a:visited,
.jcr-section a,
.jcr-section a:visited
{
   color: inherit;                               /* */
}
#jcr_sections a:hover,
.jcr-section a:hover
{
   color: hsl(315, 100%,  50%);                  /* */
}

.jcr-section:not(.jcr-section-nobefore)::before
{
   content:    '\2744' '\2744' '\2744';          /* */
   display:    block;                            /* */
   text-align: center;                           /* */
}
/* end sections style */

/* begin listings style */
ol.jcr-listing
{
   font-family:      monospace;                  /* */
   text-align:       left;                       /* */
   line-height:      1.2;                        /* */
   white-space:      pre-wrap;                   /* */
   background-color: hsl( 60, 100%,  90%);       /* */
   border-radius:    .5rem;                      /* */
   padding:          .5rem 0 .5rem 3rem;         /* */
}
ol.jcr-listing li
{
   border-left: thin solid black;                /* */
   padding:     0 .5rem;                         /* */
}

ol.jcr-listing.jcr-listing-table
{
   display: table;                               /* */
}

ol.jcr-listing.jcr-listing-nolinenrs
{
   list-style-type: none;                        /* */
   padding-left:    0;                           /* */
}
ol.jcr-listing.jcr-listing-nolinenrs li:empty::after
{
   content: '\000a';                             /* */
}
ol.jcr-listing.jcr-listing-nolinenrs li
{
   border-left: initial;                         /* */
}
/*   end listings style */

/* begin references style */
.jcr-reference
{
   vertical-align: super;                        /* */
   font-size:      smaller;                      /* */
}
.jcr-reference::before
{
   content: '[';
}                                                /* */
.jcr-reference::after
{
   content: ']';                                 /* */
}
.jcr-reference,
.jcr-reference:visited
{
   color: hsl(  0,   0%,  50%);                  /* */
}

a.jcr-reference,
.jcr-referred-link a,
.jcr-referred-citations a
{
   text-decoration: none;                        /* */
   transition:      .5s;                         /* */
}
a.jcr-reference:visited,
.jcr-referred-link a:visited,
.jcr-referred-citations a:visited
{
   color: inherit;                               /* */
}
a.jcr-reference:hover,
.jcr-referred-link a:hover,
.jcr-referred-citations a:hover
{
   color: hsl(315, 100%,  50%);                  /* */
}

@media screen
{
   .jcr-referred
   {
      display:               grid;               /* */
      grid-template-columns: repeat(3, auto);    /* */
      column-gap:            2.5rem;             /* */
      border:                hsl(  0,   0%,  30%) thin solid; /* */
      background-color:      hsl( 60, 100%,  90%); /* */
   }

   .jcr-referred li:target
   {
      background-color:      hsl(240, 100%,  90%); /* */
   }
}

@media print
{
   .jcr-referred-citations
   {
      display: none;                             /* */
   }
   .jcr-referred a[href]::after
   {
      content: ' (' attr(href) ')';              /* */
   }
}

.jcr-referred-author
{
   white-space:   pre-wrap;                      /* */
   padding-right: .3rem;                         /* */
}

.jcr-referred-link
{
   font-style: italic;                           /* */
   color:      hsl(240, 100%,  50%);             /* */
}

.jcr-referred-origin
{
   font-variant: small-caps;                     /* */
   white-space:  pre-wrap;                       /* */
   padding-left: .3rem;                          /* */
}

.jcr-referred-citations
{
   white-space:  pre-wrap;                       /* */
   padding-left: .3rem;                          /* */
}
/*   end references style */

/* begin math style */
body
{
   counter-reset: jcr-definition jcr-theorem jcr-figure; /* */
}

.jcr-definition,
.jcr-theorem
{
   margin:     .5rem 0;                          /* */
   border:     thin solid black;                 /* */
   padding:    1rem;                             /* */

   font-style: italic;                           /* */
}
.jcr-definition::before,
.jcr-theorem::before
{
   font-style:  normal;                          /* */
   font-weight: bold;                            /* */
}

.jcr-definition
{
   background-color:  hsl( 60, 100%,  90%);      /* */
   counter-increment: jcr-definition;            /* */
}
.jcr-definition::before
{
   content: 'Definition ' counter(jcr-definition) '.'; /* */
}
.jcr-definition[data-text]::before
{
   content: 'Definition ' counter(jcr-definition) ' (' attr(data-text) ').'; /* */
}
.jcr-definition:lang(nl)::before
{
   content: 'Definitie ' counter(jcr-definition) '.'; /* */
}
.jcr-definition[data-text]:lang(nl)::before
{
   content: 'Definitie ' counter(jcr-definition) ' (' attr(data-text) ').'; /* */
}

.jcr-theorem
{
   background-color:  hsl(210, 100%,  90%);      /* */
   counter-increment: jcr-theorem;               /* */
}
.jcr-theorem::before
{
   content: 'Theorem ' counter(jcr-theorem) '.'; /* */
}
.jcr-theorem[data-text]::before
{
   content: 'Theorem ' counter(jcr-theorem) ' (' attr(data-text) ').'; /* */
}
.jcr-theorem:lang(nl)::before
{
   content: 'Stelling ' counter(jcr-theorem) '.'; /* */
}
.jcr-theorem[data-text]:lang(nl)::before
{
   content: 'Stelling ' counter(jcr-theorem) ' (' attr(data-text) ').'; /* */
}

.jcr-figure figcaption
{
   font-family:       sans-serif;                /* */
   font-size:         smaller;                   /* */
   counter-increment: jcr-figure;                /* */
   text-align: center;                           /* */
}
.jcr-figure figcaption::before
{
   content: 'Figure ' counter(jcr-figure) '. ';  /* */
}
.jcr-figure figcaption:lang(nl)::before
{
   content: 'Figuur ' counter(jcr-figure) '. ';  /* */
}

.jcr-definition,
.jcr-theorem,
.jcr-figure
{
   page-break-inside: avoid;                     /* */
}
/*   end math style */

/* begin copyright style */
.jcr-copy
{
   border-top:  hsl(000, 000%, 020%) thin solid; /* */
   color:       hsl(000, 000%, 020%);            /* */
   font-size:   0.9rem;                          /* */
   text-align:  right;                           /* */
   margin:      1rem 0.5rem;                     /* */
   padding:     0.5rem;                          /* */
   user-select: none;                            /* */
}
.jcr-copy::before { content: '\00a9 '; }          /* */
.jcr-copy::after  { content: ' jcr'; }            /* */
/* end copyright style */
</style>
<script>
'use strict';
const esther_js_object = {};
document.addEventListener('DOMContentLoaded', () => esther_js_object.onload(), false);
//window.addEventListener('load', () => esther_js_object.onload(), false);
//onload = (function(other) {  return function() {  if (other) other(); esther_js_object.onload(); } })(onload);

(function(api)
{
   api.onload = function()
   {
      try
      {
         createListings();
         createReferences();
         setSectionLinks();
         let year = new Date(document.lastModified).getFullYear();
         document.querySelectorAll('.jcr-copy').forEach(y => y.innerHTML = year);

         setHandlers();

      }  catch(err) { console.log('oops', err) }
   }

   const createListings = function()
   {
      for (let element of document.querySelectorAll('textarea.jcr-listing'))
      {
         let ol = document.createElement('ol');
         ol.className = element.className;

         for (let line of element.innerHTML.replace(/\n$/, '').split('\n'))
         {
            let li = document.createElement('li');
            li.innerHTML = line;
            ol.appendChild(li);
         }

         element.replaceWith(ol);
      }
   }

   const createReferences = function()
   {
      let refnr = 1;
      let refitem = {};


      // the referred
      for (let element of document.querySelectorAll('textarea.jcr-referred'))
      {
         let ol = document.createElement('ol');
         ol.className = element.className;
         ol.start = refnr;

         for (let record of element.innerHTML.replace(/\n\s*?\n\s*/, '\n\n').split('\n\n'))
         {
            let [line1, url, text, origin] = record.split('\n').map(s => s.trim());

            let [hash, ...rest] = line1.split(' ');
            let author = rest.join(' ');

            if (!hash.startsWith('#')) { continue }

            let li = document.createElement('li');
            li.id = hash.substr(1);

            if (author)
            {
               let span_author = document.createElement('span');
               span_author.className = 'jcr-referred-author';
               span_author.innerHTML = author;
               li.appendChild(span_author);
            }

            let span_link = document.createElement('span');
            span_link.className = 'jcr-referred-link';

            let a = document.createElement('a');
            a.href = url;
            a.innerHTML = text || url;
            span_link.appendChild(a);
            li.appendChild(span_link);

            if (origin)
            {
               let span_origin = document.createElement('span');
               span_origin.className = 'jcr-referred-origin';
               span_origin.innerHTML = origin;
               li.appendChild(span_origin);
            }

            ol.appendChild(li);

            refitem[hash] = { item: li, refnr: refnr, citation: [] }
            refnr++;
         }

         element.replaceWith(ol);
      }

      // the references
      for (let element of document.querySelectorAll('.jcr-reference'))
      {
         if (!element.hash) { continue }

         let span = document.createElement('span');
         span.style.whiteSpace = 'nowrap';
         span.innerHTML = element.innerHTML;

         if (refitem[element.hash])
         {
            element.innerHTML     = refitem[element.hash].refnr;
            let hash_for_citation = `${[element.hash]}_${refitem[element.hash].citation.length}`;
            element.id            = hash_for_citation.substr(1);
            refitem[element.hash].citation.push(hash_for_citation);
         }
         else
         {
            element.innerHTML = 'link not present';
         }

         element.parentNode.insertBefore(span, element);
         span.appendChild(element);
      }


      // reduce citations array (of hashes) to string of hyperlinks
      function reduceCitations(accum, next, i, all)
      {
         let concat = accum;
         if (i) { concat += ',' }
         concat += `<a href="${next}">&uarr;`;
         if (all.length > 1) { concat += `<sub>${i+1}</sub>` }
         concat += '</a>';

         return concat;
      }

      // add citations to items in hyperlink list
      for (let hash in refitem)
      {
         if (!refitem[hash].citation.length) { continue }

         refitem[hash].item.innerHTML += '<span class="jcr-referred-citations">'
//                                    +  '<sub>cited:</sub>'
                                      +  refitem[hash].citation.reduce(reduceCitations, '')
                                      + '</span>';
      }
   }

   const setSectionLinks = function()
   {
      for (let sectionlist of document.querySelectorAll('#jcr_sections'))
      {
//       if (location.host) { sectionlist.innerHTML += '<li><a href="/">Home</a></li>'; }
         for (let section of document.querySelectorAll('.jcr-section[id]'))
         {
            if (section.offsetParent) // meaning: not hidden (display: none;)
            {
               let text = section.innerHTML;
               sectionlist.innerHTML += `<li><a href="#${section.id}">${text}</a></li>`;

               section.innerHTML = `<a href="#">${text}</a>`;
               section.title     = 'to top of page';
            }
         }
      }
   }

   const setHandlers = function()
   {
      document.querySelectorAll('input[name="players"]').forEach(x => x.oninput = checkNrPlayers);
      document.querySelectorAll('input[name="population"]').forEach(x => x.oninput = checkPopulationSize);
      document.querySelectorAll('input[name="social"]').forEach(x => x.oninput = checkSocial);
      document.querySelectorAll('input[name="contacts"]').forEach(x => x.oninput = checkContacts);
      document.querySelector('#buttonGo').onclick        = go;
      document.querySelector('#buttonGoVariant').onclick = goVariant;
   }

   const checkNrPlayers = function(e)
   {
      if (parseInt(e.target.value) < 1)  e.target.value = 1;
      if (parseInt(e.target.value) > 20) e.target.value = 20;
   }

   const checkPopulationSize = function(e)
   {
      if (parseInt(e.target.value) < 1)   e.target.value = 1;
      if (parseInt(e.target.value) > 200) e.target.value = 200;
   }

   const checkSocial = function(e)
   {
      if (parseInt(e.target.value) < 0) e.target.value = 0;
      if (parseInt(e.target.value) > 3) e.target.value = 3;
   }

   const checkContacts = function(e)
   {
      if (parseInt(e.target.value) < 1) e.target.value = 1;
      if (parseInt(e.target.value) > 4) e.target.value = 4;
   }

   const go = function(e)
   {
      let nrPlayers      = parseInt(document.querySelector('#inputNrPlayers').value);
      let populationSize = parseInt(document.querySelector('#inputPopulationSize').value);
      let distancing     = document.querySelector('#checkboxSocial').checked;

      let population = Array.from(new Array(populationSize), (v, i) =>
                       {  return { className: 'susceptible',
                                   infect: 2,
                                   social: (distancing) ? 0 : 999
                                 }
                       });

      let displayarea       = document.querySelector('#displayarea');
      displayarea.innerHTML = '';

      let resultarea = outbreak(population, nrPlayers);
      displayarea.appendChild(resultarea);

      // second outbreak
      let buttonSecond       = document.createElement('button');
      buttonSecond.innerHTML = 'Tweede uitbraak';
      buttonSecond.onclick   = showSecond;
      displayarea.appendChild(buttonSecond);

      resultarea               = outbreak(population, nrPlayers);
      resultarea.id            = 'secondOutbreak';
      resultarea.style.display = 'none';
      displayarea.appendChild(resultarea);
   }

   const showSecond = function(e)
   {
      document.querySelector('#secondOutbreak').style.display = 'block';
   }


   const goVariant = function(e)
   {
      let nrPlayers      = parseInt(document.querySelector('#inputNrPlayersVariant').value);
      let populationSize = parseInt(document.querySelector('#inputPopulationSizeVariant').value);

      let category = ['red', 'orange', 'yellow', 'green', 'blue', 'purple'];

      let infect = category.map((v,i) => parseInt(document.querySelector(`.${v}~input[name="contacts"]`).value));
      let social = category.map((v,i) => parseInt(document.querySelector(`.${v}~input[name="social"]`).value));

      let population = Array.from(new Array(populationSize), (v, i) =>
                       {  return { className: category[i % category.length],
                                   infect: infect[i % infect.length],
                                   social: social[i % social.length]
                                 }
                       });

      let displayarea       = document.querySelector('#displayareaVariant');
      displayarea.innerHTML = '';

      let resultarea = outbreak(population, nrPlayers);
      displayarea.appendChild(resultarea);
   }

   const outbreak = function(population, nrPlayers)
   {
      let resultarea           = document.createElement('div');
          resultarea.className = 'resultarea';

      let player = new Array(nrPlayers).fill(1);
      let week   = 1;

      while (player.some(v => v))
      {
         // implement social distancing
          population.forEach(p => { if (p.infect > 0 && p.social < week) p.infect = 1 });


         let div_week = document.createElement('div');
         div_week.className = 'weekarea';
         resultarea.appendChild(div_week);

         let div_header = document.createElement('div');
         div_header.innerHTML = `week ${week++}`;
         div_week.appendChild(div_header);

         // shuffle population
         for (let i = population.length; i > 1; i--)
         {
            let j = Math.floor(Math.random()*i);

            [population[i-1], population[j]] = [population[j], population[i-1]];
         }

         let subject = 0;

         player.forEach((grabThisWeek, p) =>
         {
            let grabNextWeek = 0;

            while (grabThisWeek--)
            {
               if (subject < population.length)
               {
                  let div_subject       = document.createElement('div');
                  div_subject.className = (population[subject].infect > 0)
                                        ? population[subject].className
                                        : 'immune';
                  div_subject.innerHTML = `${String.fromCharCode(p+65)}:${population[subject].infect}`;
                  div_week.appendChild(div_subject);

                  grabNextWeek += population[subject].infect;
                  population[subject].infect = 0;
                  subject++;
               }
               else
                  break;
            }

            player[p] = grabNextWeek;
         });
      }

      let div_summary = document.createElement('div');

      let unaffected = population.reduce((a,v) => a + ((v.infect > 0) ? 1 : 0), 0);
      div_summary.innerHTML = `<div>geen verspreiding meer; ${((1-unaffected/population.length)*100).toFixed()}% is immuun, niet vatbaar voor nieuwe uitbraak</div>`;

      resultarea.appendChild(div_summary);

      return resultarea;
   }
})(esther_js_object);
</script>
</head>
<body>

<div class="jcr-layout">

<div class="jcr-layout-header"></div> <!-- jcr-layout-header -->
<div class="jcr-layout-left">
<ul id="jcr_sections"></ul>
</div> <!-- jcr-layout-left -->

<div class="jcr-layout-main">

<div class="disclaimer">
Ik ben geen medicus of viroloog. Het verhaal over een virusuitbraak is niet
wetenschappelijk bedoeld. De gebruikte getallen zijn bedoeld als simpele
illustratie, ze hebben geen verband met enige werkelijke situatie.
Het wiskundig model dat virologen gebruiken is veel gedetailleerder en
ingewikkelder dan wat ik hier beschrijf. Mijn model is slechts het model
dat het rollenspel beschrijft.
</div>

<h4 class="jcr-section" id="newvirus">Een virusuitbraak</h4>

De covid-19 uitbraak heeft een aantal nieuwe woorden en uitdrukkingen aan
ons dagelijks taalgebruik toegevoegd.
We moesten aan <i>social distancing</i> gaan doen om een <i>lockdown</i>
te voorkomen omdat de druk op de gezondheidszorg te groot werd.
En <i>groepsimmuniteit</i> was een mooi streven, maar kon niet voorkomen dat de
ziekenhuizen vol zouden lopen.
<br/>
<br/>
Iemand die een besmettelijk virus in z'n lichaam heeft zal het naar buiten brengen door
te hoesten, niezen of misschien zelfs al door te ademen.
Het virus zal ongetwijfelt op z'n handen terechtkomen en daar enige uren overleven,
misschien ook op dingen die die handen aanraken zoals deurknoppen.
Dat virus kan dan andere mensen besmetten als die zich op korte
afstand van de besmette persoon bevinden, via miniscule vochtdruppels
of de handen.
Via <i>contacten</i> heet dat.
<br/>
<br/>
Stel dat elk besmet persoon in een week tijd twee anderen besmet.
Dan loopt het aantal besmette personen steeds sneller op:
<div class="jcr-figure">
<div class="rows2">
<div></div><div>nieuwe besmettingen</div>
<div>week 1</div><div>1000</div>
<div>week 2</div><div>2000</div>
<div>week 3</div><div>4000</div>
<div>week 4</div><div>8000</div>
<div>week 5</div><div>16000</div>
<div>week 6</div><div>32000</div>
</div>
<figcaption/>
</div>
Op een zeker moment zal de stijging echter minder snel gaan, want contacten met
mensen <i>die al besmet zijn</i> leveren geen nieuwe besmettingen op.
En met virussen gaat het meestal zo dat iemand het na enige tijd kwijtraakt
en daarna <i>niet opnieuw besmet kan worden</i>, zo iemand kan ook niemand
anders meer besmetten.
<br/>
Maar in het begin kan de stijging van het aantal besmettingen echt heel erg
hard gaan. Men spreekt niet voor niets over een <i>uitbraak</i> van een
<i>epidemie</i>.
<br/>
<br/>
Niet iedereen wordt ziek, maar ook
als bijvoorbeeld &eacute;&eacute;n op de honderd besmette personen ernstig ziek
wordt heb je steeds meer
ziekenhuisbedden nodig, en daarom wil je het aantal nieuwe besmettingen
koste wat kost kleiner zien te maken.
<br/>
<br/>
Help het als je de grenzen van je land sluit?
<br/>
Als je nul besmettingen hebt wel, niemand zal het virus dan binnen jouw grenzen
kunnen brengen.
<br/>
Er zijn twee situaties waarin je nul besmettingen kunt hebben:
uiteraard als het virus jouw land nog niet bereikt heeft, maar ook als de
virusuitbraak na een aantal maanden is uitgedoofd maar er zijn nog veel mensen
niet besmet geweest. Die mensen zijn nog altijd vatbaar en er kan dus een
tweede uitbraak komen.
<br/>
Maar stel dat er bij het getallenvoorbeeld hierboven elke week een vliegtuig
binnenkomt met 100 besmette personen die zich onder de bevolking mengen. De
groeicijfers worden dan:
<div class="jcr-figure">
<div class="rows3">
<div></div><div>nieuwe besmettingen</div><div>1% (nieuwe) zieken</div>
<div>week 1</div><div>1100</div><div>10+1</div>
<div>week 2</div><div>2300</div><div>20+3</div>
<div>week 3</div><div>4700</div><div>40+7</div>
<div>week 4</div><div>9500</div><div>80+15</div>
<div>week 5</div><div>19100</div><div>160+31</div>
<div>week 6</div><div>38300</div><div>320+63</div>
</div>
<figcaption/>
</div>
In elke week zijn er dus ook extra zieken ten opzichte van de situatie zonder
instroom van buiten.
Het gevolg is dat je ziekenhuizen wat eerder vol raken.
<br/>
Maar zonder instroom van buiten raken de ziekenhuizen ook vol.
Je wint er dus wat tijd mee als je de grenzen sluit, tijd om ziekenhuisbedden
te regelen.
<br/>
<br/>
Maar wat je natuurlijk echt wilt is dat de ziekenhuizen <i>niet</i> vol raken.
<br/>
Dat bereik je door het aantal contacten te beperken.
<br/>
Stel dat een besmet persoon maakt minder contacten en besmet daardoor slechts
&eacute;&eacute;n andere persoon per week. Ons tabelletje wordt dan:
<div class="jcr-figure">
<div class="rows3">
<div></div><div>nieuwe besmettingen</div><div>1% (nieuwe) zieken</div>
<div>week 1</div><div>1000</div><div>10</div>
<div>week 2</div><div>1000</div><div>10</div>
<div>week 3</div><div>1000</div><div>10</div>
<div>week 4</div><div>1000</div><div>10</div>
<div>week 5</div><div>1000</div><div>10</div>
<div>week 6</div><div>1000</div><div>10</div>
</div>
<figcaption/>
</div>
De vraag naar ziekenhuisbedden is nu beduidend minder.
<br/>
<br/>
Eigenlijk zou je alleen de contacten van <i>besmette</i> personen hoeven
te beperken. De mensen die nog niet besmet zijn geweest en de mensen die
het virus niet meer hebben zorgen immers niet voor nieuwe besmettingen.
<br/>
De beste oplossing lijkt heel simpel: test iedereen en isoleer degenen die besmet zijn.
<br/>
<br/>
Iedereen aan een test onderwerpen is makkelijker gezegd dan gedaan.
<br/>
Bij het begin van de uitbraak van een nieuw virus zoals covid-19 weet je
helemaal niet dat er sprake is van een nieuw virus. Er is dus ook nog geen test
beschikbaar.
<br/>
Men moet er eerst achter komen dat er sprake is van een nieuw virus, en
vervolgens moet er een bruikbare test ontwikkeld en massaal geproduceerd worden.
<br/>
En ondertussen verspreidt het virus zich &hellip;
Dat is het probleem dat men in China had.
<br/>
Daarnaast vergt het natuurlijk een hele organisatie om grote aantallen mensen
te testen, nog afgezien van belemmerende factoren zoals privacy
(iemand die zich niet ziek voelt kun je moeilijk dwingen zich te laten testen).
En hoe meer mensen al besmet zijn hoe lastiger dat is te organiseren.
<br/>
Maar als je een test ter beschikking hebt en je gaat zo snel mogelijk grote
aantallen mensen testen en besmette mensen isoleren dan voorkom je heel veel
nieuwe besmettingen. Dat is wat men in Zuid Korea met redelijk succes gedaan
heeft.
<br/>
In de meeste landen is dat helaas niet haalbaar.
En dan zit er niets anders op dan vrijwel <i>iedereen</i> minder contacten
te laten maken: <i>social distancing</i>.

<h4 class="jcr-section" id="model">Een wiskundig model</h4>

Er is nog een ander aspect dat de aandacht waard is. Je kunt dus eigenlijk
drie groepen onderscheiden:
<ol>
<li>vatbare personen, die (nog) niet besmet zijn</li>
<li>besmette personen, al dan niet ziek, die het virus kunnen overdragen</li>
<li>herstelde personen, die niet meer besmet kunnen worden en geen virus meer overdragen</li>
</ol>
De eerste groep wordt eigenlijk alleen maar kleiner, vatbare mensen kunnen
naar de groep besmette mensen gaan, maar niemand gaat van uit een andere groep
naar de groep vatbaren.
<br/>
De mensen uit de tweede groep dragen dus via contacten het virus over aan mensen
uit de eerste groep. Maar wat als ze alleen nog maar contacten maken met mensen uit de
derde groep?
<br/>
Ten eerste komen er dan geen nieuwe personen in de tweede groep, want je komt daar
alleen vanuit de eerste groep na contact met iemand anders uit die tweede groep.
<br/>
Ten tweede is een verblijf in de tweede groep van tijdelijke aard; na enige
tijd belandt een persoon uit de tweede groep in de derde groep.
<br/>
Dus de tweede groep loopt uiteindelijk leeg!
<br/>
<br/>
De virusverspreiding kom dus op een gegeven moment tot stilstand.
Als de groep met vatbare personen dan relatief heel klein is wordt de kans op een
tweede uitbraak klein. Stel namelijk dat er op een of andere manier toch weer
personen besmet raken en via contacten het virus gaan overdragen dan is de kans
op een contact met iemand uit de eerste groep veel kleiner dan die van een contact
met iemand uit de derde groep.
<br/>
Dat heet <i>groepsimmuniteit</i>: als verreweg de meeste mensen niet meer vatbaar
zijn.
<br/>
<br/>
Groepsimmuniteit kun je ook kunstmatig cre&euml;ren door <i>vaccinatie</i>, ofwel inenting.
<br/>
Wat betekent het eigenlijk als iemand niet meer besmet kan worden, als iemand
in de derde groep zit? Eigenlijk wordt zo'n persoon wel besmet, maar zijn
afweersysteem herkent het virus als het ware als een vijand en reageert
door <i>antistoffen</i> te produceren dat het virus meteen om zeep helpt.
<br/>
Als je nu iemand met een zogeheten <i>vaccin</i> een heel klein beetje besmet,
niet genoeg om iemand echt ziek te maken, maar wel genoeg om het afweersysteem te leren om het virus
als vijandig te zien dan zal het afweersysteem bij een echte aanval van het
virus meteen reageren en, in de meeste gevallen, vernietigen.
Dat is, kort door de bocht, het principe van vaccinatie.
<br/>
Maar voor een <i>nieuw</i> virus heb je uiteraard nog geen vaccin als wapen;
en de ontwikkeling van een nieuw vaccin duurt lang, vaak meer dan een jaar.

<br/>
<br/>
Veel of weinig contacten, het maakt een groot verschil, ook in de mate van
immuniteit op het moment dat de verspreiding tot stilstand gekomen is.
De groep die dan immuun is (de derde groep) is bij weinig contacten veel kleiner
dan bij veel contacten.
<br/>
Social distancing heeft dus twee belangrijke gevolgen:
<ol>
<li>nadeel: geen groepsimmuniteit, grote kans op tweede uitbraak</li>
<li>voordeel: minder mensen tegelijkertijd besmet</li>
</ol>
Het tweede wordt als belangrijker gezien,
want hoe meer mensen tegelijkertijd besmet, hoe groter de druk op de
gezondheidszorg.

<br/>
<br/>
<div class="jcr-figure">
<iframe id="geogebra" src="https://www.geogebra.org/material/iframe/id/ckurfkkt/sfsb/false/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/true/rc/false/ld/false/sdz/false/ctl/false">
<!--
    /width/1200/height/600/border/000000
-->
</iframe>
<figcaption><br/>(Versleep de blauwe stip, of selecteer hem en toets spatiebalk: start/stopt animatie.)</figcaption>
</div>


<h4 class="jcr-section" id="game">Het rollenspel</h4>

De verschillen tussen veel en weinig contacten kunnen aanschouwelijk gemaakt
worden door middel van een rollenspel. Hoewel, <i>rollen</i>, er is maar
&eacute;&eacute;n rol: alle deelnemers spelen voor virus.
<br/>
Het werkt als volgt.
<br/>
Je hebt een bak met ballen van het soort dat bij lotingen gebruikt wordt:
ballen die je open kunt maken en waar iets in kan zitten (je kunt ook
zogenaamde verrassingseieren nemen).
<br/>
Die ballen staan voor een bevolking, een <i>populatie</i>.
E&eacute;n bal vertegenwoordigt een vast aantal personen, voor het gemak
zeggen we even &eacute;&eacute;n persoon.
<br/>
Een bal is leeg of bevat iets waarvan je niet aan de buitenkant kunt merken
dat het er in zit, bijvoorbeeld een kleine pompon.
Een lege bal staat voor een vatbare persoon, een gevulde bal staat voor een
immune persoon (de pompon vertegenwoordigt de antistoffen).
<br/>
<br/>
Het spel beslaat een aantal ronden, die staan voor de weken die een
virusuitbraak duurt.
<br/>
De spelers pakken iedere ronde elk een aantal ballen; in de eerste ronde is dat er
&eacute;&eacute;n.
<br/>
<br/>
Elke lege bal die een speler pakt wordt <i>besmet</i>; voor elke
gevulde bal die een speler pakt verandert er niets.
Een speler staat model voor een virus dat al dan niet overgedragen kan worden.
<br/>
Spelers die alleen maar ballen gevuld met antistoffen pakken vallen af:
zij konden niemand besmetten.
<br/>
Het doel van het spel is dat alle spelers afvallen.
<br/>
<br/>
Gevulde, immune ballen kunnen meteen terug in de bak.
Het virus heeft er geen vat op.
<br/>
<br/>
De lege ballen worden door het virus, de speler, besmet.
Maar ze gaan ook antistoffen produceren.
Dat symboliseren we door iets in de bal te stoppen.
<br/>
<br/>
Dan worden de besmette ballen in de bak gedaan en de ballen worden door
elkaar gehusseld: er worden contacten gemaakt.
<br/>
<br/>
Die contacten zijn dus een prooi voor het virus (de spelers) in de volgende ronde.
<br/>
Het spel kan op twee manieren gespeeld worden:
met en zonder <i>social distancing</i>:
<ul>
<li>
<i>zonder</i> social distancing pakt de speler twee ballen uit de bak
per besmette bal die hij in de bak teruggedaan had
</li>
<li>
<i>met</i> social distancing pakt de speler &eacute;&eacute;n bal uit
de bak als hij een besmette bal had
</li>
</ul>
Een speler die geen enkele besmette bal had valt dus af
en na een aantal ronden zullen alle spelers afgevallen zijn:
dan is het spel afgelopen.
<br/>
In theorie kunnen nu <i>alle</i> ballen antistoffen bevatten:
dan is de bevolking dus voor 100% immuun.
<br/>
In de praktijk zullen er echter ballen zijn die nog leeg zijn.
Met social distancing zijn dat er over het algemeen veel
meer dan zonder social distancing.
<br/>
Als je een niet al te kleine populatie had kun je het effect daarvan zien
door het spel meteen nog een keer te spelen
zonder iets aan de ballen te doen (zonder ze eerst leeg te maken).
<br/>
Als er social distancing is gebruikt kun je een tweede uitbraak zien:
er zijn nog aardig wat ballen die besmet kunnen worden.
<br/>
Als er geen social distancing is gebruikt zullen er maar weinig ballen besmet
kunnen worden: dat is het effect van groepsimmuniteit, (of van vaccinatie!).
<br/>
<br/>
Zonder social distancing symboliseert het spel een situatie waar de druk
op de gezondheidszorg (te) groot wordt.
Dat kan in het spel als volgt aanschouwelijk gemaakt worden.
Zie een besmette bal als vertegenwoordiging van een <i>groep</i> mensen,
waarvan een vast percentage het ziekenhuis in moet.
<br/>
Geef elke speler &eacute;&eacute;n sokkeltje (bijvoorbeeld een eierdopje)
waar hij een besmette bal op kan zetten.
<br/>
De sokkel staat voor een ziekenhuis met genoeg plek voor het percentage
mensen uit een bal die behandeling nodig hebben.
<br/>
Met social distancing pakt een speler altijd maar
&eacute;&eacute;n bal. Er is dus altijd genoeg plek in zijn ziekenhuis.
<br/>
Zonder social distancing kan de speler meerdere ballen
moeten pakken. Als daar meer dan &eacute;&eacute;n lege bal bij zit is er
een probleem: hij heeft maar &eacute;&eacute;n sokkel, er is niet genoeg
capaciteit in de gezondheidszorg.
<br/>
<br/>
Je kunt een varianten aanbrengen: ballen die meer contacten maken dan anderen,
zogenaamde <i>superverspreiders</i>. Dat kunnen bijvoorbeeld ballen met een
bepaalde kleur zijn. Zonder social distancing pakt een speler in de volgende
ronde niet twee, maar
<i>vier</i> nieuwe ballen als hij een superverspreider te pakken had.
M&egrave;t social distancing pakt hij er maar &eacute;&eacute;n, net als in de oorspronkelijke
variant.
Superverspreiders symboliseren volle sportstadions,
carnavalvierders, overvolle treinen, etc.
<br/>
Je kunt social distancing pas na de eerste ronde laten ingaan, of de ballen
in categorie&euml;n verdelen die op verschillende momenten social distancing
gaan toepassen.
In het echte leven begint social distancing immers pas n&agrave; een
uitbraak, en gefaseerd.



<h4 class="jcr-section" id="simulation">Een computersimulatie</h4>

Hieronder staat een computersimulatie. Je kunt een aantal spelers invoeren,
de grootte van de populatie kiezen en, het belangrijkste, social distancing
aanvinken.
<br/>
De startknop initieert een volledige simulatie van het spel en laat het
resultaat meteen op het scherm zien.
Een lege, dus vatbare c.q. besmette bal ziet er zo uit: <div class="susceptible text"></div>,
en een gevulde, immune bal zo: <div class="immune text"></div>.
<br/>
Binnen die bal staat welke speler hem gepakt heeft en voor hoeveel ballen
hij deze bal in de volgende ronde moet inwisselen; <b>A:2</b> wil dus zeggen
dat speler <b>A</b> voor deze bal in de volgende ronde twee nieuwe ballen
pakt.
<br/>
Het husselen van de ballen wordt dus ook gesimuleerd, daardoor zie je
verschillende resultaten als je de simulatie meerdere keren met de zelfde
instellingen uitvoert.
<br/>
Er verschijnt ook steeds een knop waarmee een tweede uitbraak, gebaseerd op
de mate van immuniteit die de eerste uitbraak achterliet, zichtbaar wordt.
<br/>
Zonder social distancing kan die tweede uitbraak ook model staan
voor een gevaccineerde populatie. Je kunt zien of het percentage dat
gevaccineerd was eigenlijk wel hoog genoeg was om problemen te voorkomen.

<hr/>
<div class="parameters">
<div class="cols2">
<div>Aantal spelers (maximaal 20):</div>
<input id="inputNrPlayers"
       type="number"
       name="players"
       step="1"
       min="1"
       max="20"
       value="4"
/>

<div>Populatie (maximaal 200):</div>
<input id="inputPopulationSize"
       type="number"
       name="population"
       step="1"
       min="1"
       max="200"
       value="36"
/>

<div><label for="checkboxSocial">Social distancing:</label></div>
<div>
<input id="checkboxSocial"
       type="checkbox"
/>
</div>
</div> <!-- cols2 -->

<button id="buttonGo">Start</button>
</div> <!-- parameters -->


</div> <!-- jcr-layout-main -->
<div class="jcr-layout-right0"></div> <!-- jcr-layout-right -->

<div class="jcr-layout-footer0">

<div id="displayarea"></div>
</div> <!-- jcr-layout-footer -->



<div class="jcr-layout-left2"></div> <!-- jcr-layout-left -->

<div class="jcr-layout-main2">

Om verschillende varianten van het spel te kunnen simuleren wordt de
populatie opgedeeld in zes categorie&euml;n die elk een andere kleur hebben.
Per categorie kun je getallen toekennen voor het aantal contacten dat de
categorie maakt, vari&euml;rend van 1 (wat overeenkomt met social distancing)
tot 4 (een superverspreider).
<br/>
Ook kun je per categorie aangeven wanneer social distancing voor die
categorie van kracht wordt: 0 staat voor meteen, 1 voor na de eerste ronde, etc.
<hr/>

<div class="parameters">
<div class="cols2">
<div>Aantal spelers (maximaal 20):</div>
<input id="inputNrPlayersVariant"
       type="number"
       name="players"
       step="1"
       min="1"
       max="20"
       value="4"
/>

<div>Populatie (maximaal 200):</div>
<input id="inputPopulationSizeVariant"
       type="number"
       name="population"
       step="1"
       min="1"
       max="200"
       value="36"
/>
</div> <!-- cols2 -->

<div class="cols5">

<div class="red"></div>
<label for="inputRedContacts">contacten:</label>
<input id="inputRedContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputRedSocial">social distancing na ronde:</label>
<input id="inputRedSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>

<div class="orange"></div>
<label for="inputOrangeContacts">contacten:</label>
<input id="inputOrangeContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputOrangeSocial">social distancing na ronde:</label>
<input id="inputOrangeSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>

<div class="yellow"></div>
<label for="inputYellowContacts">contacten:</label>
<input id="inputYellowContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputYellowSocial">social distancing na ronde:</label>
<input id="inputYellowSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>

<div class="green"></div>
<label for="inputGreenContacts">contacten:</label>
<input id="inputGreenContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputGreenSocial">social distancing na ronde:</label>
<input id="inputGreenSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>

<div class="blue"></div>
<label for="inputBlueContacts">contacten:</label>
<input id="inputBlueContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputBlueSocial">social distancing na ronde:</label>
<input id="inputBlueSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>

<div class="purple"></div>
<label for="inputPurpleContacts">contacten:</label>
<input id="inputPurpleContacts"
       type="number"
       name="contacts"
       step="1"
       min="1"
       max="4"
       value="2"
       title="1-4"
/>
<label for="inputPurpleSocial">social distancing na ronde:</label>
<input id="inputPurpleSocial"
       type="number"
       name="social"
       step="1"
       min="0"
       max="3"
       value="1"
       title="0-3"
/>
</div> <!-- cols5 -->

<button id="buttonGoVariant">Start</button>
</div> <!-- parameters -->
</div> <!-- jcr-layout-main -->

<div class="jcr-layout-right"></div> <!-- jcr-layout-right -->

<div class="jcr-layout-footer">

<div id="displayareaVariant"></div>


<div class="jcr-copy"></div>

<!-- references -->
<!--
<h3 class="jcr-section jcr-section-nobefore" id="section_references">Referenties</h3>
<!-- refer as:
<a href="#ref_something" class="jcr-reference"></a>
   references in textarea:
#ref_something [author]
url
text
[origin (website)]
   separate references with empty lines
-->

<!--
<textarea class="jcr-referred">
#myref_wiki optional: author
https://nl.wikipedia.org/
optional: text
optional: origin

</textarea> <!-- jcr-referred -->
</div> <!-- jcr-layout-footer -->

</div> <!-- jcr-layout -->
</body>
</html>
